priority -50

extends c

# We want to overwrite everything in parent ft.
priority -49
snippet prd
std::cout << __PRETTY_FUNCTION__ << " " << $1 << std::endl; // prdbg
endsnippet

################
# Pre-processor

snippet linc "#include local header (linc)"
#include "${1:`!p snip.rv = snip.basename + '.hpp'`}"
endsnippet

###############
# Keywords

snippet struct "c++ struct .. (struct)"
struct ${1:`!p snip.rv = snip.basename or "name"`}
{
public:
	${2}

private:
	${0}
};
endsnippet

snippet class "class .. (class)"
class ${1:`!p snip.rv = snip.basename or "name"`} 
{
public:
	${2}

private:
	${0}
};
endsnippet

snippet namespace "namespace .. (namespace)"
namespace${1/.+/ /m}${1:`!p snip.rv = snip.basename or "name"`}
{
	${VISUAL}${0:${VISUAL/(.*)/(?1::\/* code *\/)/}}
}
endsnippet

snippet forr "for range loop"
for(auto ${2:x} : ${1:collection})
{
	${0:/* code */}
}
endsnippet

snippet {&,ref} "reference to object"
${0:T}&
endsnippet

##############
# STD lib

snippet range "$1.begin(), $1.end() (beginend)"
${1:v}${1/^.*?(-)?(>)?$/(?2::(?1:>:.))/}begin(), $1${1/^.*?(-)?(>)?$/(?2::(?1:>:.))/}end()
endsnippet

snippet map "std::map (map)"
std::map<${1:key}, ${2:value}> map$0;
endsnippet

snippet {vec,vector} "std::vector (v)"
std::vector<${1:char}> ${0:name};
endsnippet

snippet template "template <typename ..> (template)"
template <typename ${0:T}>
endsnippet


# vim:ft=snippets:
